clone:
  "[CLONE] git":
    image: plugins/git
    tags: true

pipeline:
  "[BUILD] maven verify":
    image: containers.cisco.com/servicescf-devops/maven-cisco-docker
    pull: true
    scripts:
      - mvn -B clean verify -Dmaven.test.failure.ignore=true
      - mvn -B findbugs:findbugs
    when:
      branch:
        - master
        - refs/heads/master
        - v*__deploy__*
        - refs/tags/v*__deploy__*
        - feature/*
        - refs/heads/feature/*
      event:
        - push
        - pull_request

  "[ANALYSIS] Sonar":
    image: containers.cisco.com/servicescf-devops/drone-sonar
    pull: true
    host: https://engci-sonar-blr.cisco.com/sonar
    language: "java"
    findbugs_reportPath: "**/findbugsXml.xml"
    cobertura_reportPath: target/site/cobertura/coverage.xml
    sonar_dynamicAnalysis: reuseReports
    sonar_java_coveragePlugin: jacoco
    jacoco_reportPath: target/jacoco.exec
    junit_reportPath: target/surefire-reports/**/*.xml
    debug: false
    sonar_multilang: false
    secrets: [ sonar_login ]
    when:
      branch:
        - master
        - refs/heads/master
        - v*__deploy__*
        - refs/tags/v*__deploy__*
      event:
        - pull_request
        - push

  "[PUBLISH] docker image":
    image: plugins/docker
    repo: containers.cisco.com/cx-platforms/cxpp-training-enablement
    registry: containers.cisco.com
    tags:
      - latest
      - ${CI_COMMIT_SHA}
    secrets: [ docker_username, docker_password ]
    when:
      branch:
        - master
        - refs/heads/master
        - v*__deploy__*
        - refs/tags/v*__deploy__*
      event:
        - push
        - pull_request


  ## ==========================================================================
  ## Event is a tag with deploy tag format, then deploy to given environment.
  ## ==========================================================================

  ## ==========================================================================
  ## CIDER - Continuous Integration & Delivery Environment Runner.
  ## ==========================================================================
  ## This block can deploy your service to any of the pre-defined k8s clusters.
  ## 1. Destination is chosen based on the git tag commit ref that triggered drone.
  ##  1a. Reacts to git 'tag' events and the specified tag format under 'branch: include:'
  ##  1b. Internally determines whether the tag's commit ref matches the expected format.
  ## 2. Does not react to Drone command line events: 'deployment', 'promote'.
  ##  2a. These events are not GitOps and they are not portable to other build systems.
  ## 3. Reacts to git 'push' (and merge) events to CD auto-deploy to a pre-defined environment.
  ## ==========================================================================
  "[DEPLOY] CIDER to ANY env":
    image: rtluckie/cicd-toolbox:0.1.4
    environment:
      - CIDER_NAME=cider-toolkit
    commands:
      - git clone https://bitbucket-eng-sjc1.cisco.com/bitbucket/scm/creando/cider-toolkit.git $CIDER_NAME
      - export CIDER_DIR=$CI_WORKSPACE/$CIDER_NAME
      - make deploy
    secrets:
      [
        p3_idev_api_server, p3_idev_kubernetes_token, p3_idev_kubernetes_context,
        p3_istg_kube_config,
        p3_ilt_api_server, p3_ilt_kubernetes_token, p3_ilt_kubernetes_context,
        p3_prd_api_server, p3_prd_kubernetes_token, p3_prd_kubernetes_context,
        p3_prdemea_api_server, p3_prdemea_kubernetes_token, p3_prdemea_kubernetes_context
      ]
    when:
      event:
        - tag
        - push
      branch:
        include:
          - master
          - "feature/*"
          - v*__deploy__*
          
  "[ANALYSIS] Corona":
    #detach: true
    image: containers.cisco.com/servicescf-devops/drone-corona
    pull: true
    docker_image: containers.cisco.com/cx-platforms/cxpp-training-enablement:${CI_COMMIT_SHA}
    docker_registry: containers.cisco.com/
    corona_product_id: 4142
    corona_release_version: 0.1.1
    secrets: [ corona_login, corona_password, docker_username, docker_password] #[Mandatory]
    corona_nfs_upload: false #[Optional]: true, if file size is huge > 500MB
    corona_scan_timeout: 50
    when:
      event:
        - tag
    branch:
      include:
        - v*__deploy__*istg*

  "[NOTIFY] webex teams":
    image: containers.cisco.com/servicescf-devops/drone-spark
    pull: true
    room: "CXPP-CI/CD" # Spark room name
    when:
      status: [ changed, failure, success ] # Notification criteria can be changed as needed


## ==========================================================================
## Only some branches/tags are going to be built by drone. This is the filter.
## ==========================================================================
branches:
  include:
    - "master"
    - "refs/heads/master"
    - "feature/*"
    - "refs/heads/feature/*"
    - "v*__deploy__*"
    - "refs/tags/v*__deploy__*"
## EOF
